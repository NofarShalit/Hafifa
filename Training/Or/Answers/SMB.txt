SMB
1) The SMB message is built from 3 parts:
  1. The Header - the smb header contain a few part:
    Protocol - this section contains 4 bytes and will always be " '\xFF','S','M','B' " in this order
    Command - a 1 byte command code
    Status - a 4 byte field for the server to communicate the errors to the client
    Flags - a 8 bit field for 8 1-bit flags that describe features affecting the message
    Flags2 - a 16 bit field for 16 1-bit flags that describe features affecting the message, unspecified bits are reserved and must be zero
    PIDHigh - a 2 byte field that if set to non zero represent the high-order bytes of a PID, combine with PIDLow to get full PID
    SecurityFeatures - this field has 3 possible interpretation:
      If security signatures are negotiated there is an 8 1-byte field for this.
      If SMB signing is negotiated this field contains a 8 byte cryptographic message signature that help to check if the data has been modified in transit
      If CIFS is being transported than the field will be structured with " Key, CID, SequenceNumber "
        Key - a 4 byte field with an encryption key used for contactless transport
        CID - a 2 byte field with connection identifier
        SequenceNumber - a 2 byte field with numbers to identify the sequence of message over contactless transport
      If no case applies this field is reserved and set to zero
    Reserved - a reserved 2 byte field that should be set to zero
    TID - a 2 byte tree identifier
    PIDLow - the lower 16 bit of the pid
    UID - a 2 byte field with user identifier information
    MID - a 2 byte field with multiplex identifier
  2. Parameter Block - the parameter block contains 2 parts:s
    WordCount - a 1 byte field containing the size of the Word array, this field can be zero if the words field is empty
    Words - the parameter structure of the message, the size of this field must be 2*WordCount in bytes
  3. Data Block - similar structur to the parameter block
    ByteCount - a filed of 2 bytes containing the size of the Bytes array, this field can be zero indicating that the Bytes field is empty
    Bytes - the data structure of the message, this field must be the size of ByteCount in bytes, if BytesCount is zero this field is ignored

2) An SMB Relay attack is when an attacker intercepts the NTLMv2 communication between a client and a server,
  the attacker lets the victim go through the normal authentication process and intercepts when the server sends the
  final authentication packet to let the victim know it has succsesfully authenticated, the attacker takes the packet
  for himself and can now communicate with the server, meanwhile the attacker tells the victim it has succsesfully authenticated,
  and relays all of his traffic through him to the server, and vice versa, and so he can see all communications beetween 
  the victim and attacker.
  TL:DR - MiTM attack of NTLMv2 Protocol

3) Relay to SMB - this attack is when a victim is being manipulated in one way or another to click, open, etc a file or web server,
  and gets redirected to a malicious SMB server and automatically authenticates to the server and sends it credentials to it.

4) NTLM - NTLM is an authentication protocol using the challenge-response method, meaning that a user who wants to authenticate,
  goes throught a few steps:
  - the user requests access, he provides his username, his domain name, and a hash of his password (calculated automaticaly by the client)
  - the client computer sends the username and domain name
  - the server sends a challenge, which is just a string of random text 8 bytes long
  - the client encrypts the challenge with his password hash and sends it to the server
  - the server sends the username, the original challenge, and the client response (the encrypted challenge) to the domain controller
  - the DC goes th his data base, fetches the password hash and encrypts he original challenge himself
  - if the DC calculation and the recieved client response is identical, the authentication is succsesfull and the client is allowed to connect
  There are 3 main weaknesses in NTLM:
  - Single Authentication, meaning the NTLM protocol does not support multi-factor authentication
  - Security Vulnerabilities, the simplistic form of password hashing in NTLM makes it possible for a pass the hash attack and even for brute force
  - Outdated Cryptography, NTLM is old and its algorithms are not secured in todays standards

5) Kerberos is using a ticket based protocol and therefore need a third party authentication service, so a DC needs to be present,
  meaning that in workgroups we cannot use kerberos, in local authentication we are using NTLM,
  when trying to connect to an IP address instead of a SPN (domain name (10.0.0.255  instead of "MOSHE-PC-1")),
  when DNS server isn't present or reachable NTLM is used, and for everything outside of the domain, even if one side is in a domain,
  TL:DR - kerberos will be used if SPN is used to connect, DNS server is present, both computers are inside the same domain, and remote authentication is used

6) NTLM will be used if one or more criteria isn't met:
  - SPN isn't used (IP addresses are used instead)
  - DNS server isn't reachable
  - one or more of the computer in the authentication process isn't in the same domain as the other
  - local authentication is used